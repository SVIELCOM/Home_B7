---

- name: Creatin a node
  hosts: node
  become: true
  become_user: root
  tasks:

  # Install Docker and its dependent components.
  - name: Install packages that allow apt to be used over HTTPS
    ansible.builtin.apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

  - name: Add an apt signing key for Docker
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version of docker
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install docker and its dependecies
    ansible.builtin.apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    notify:
      - docker status

  - name: Add ubuntu user to docker group
    ansible.builtin.user:
      name: ubuntu
      group: docker

  - name: Create docker daemon json config file
    ansible.builtin.lineinfile:
      path: /etc/docker/daemon.json
      line: "{{ item }}"
      create: true
      mode: 0666
    with_items:
      - '{'
      - '   "exec-opts": ["native.cgroupdriver=systemd"],'
      - '   "log-driver": "json-file", '
      - '   "log-opts":{'
      - '   "max-size": "100m"'
      - '    },'
      - '   "storage-driver": "overlay2"'
      - '}'

  - name: Restart docker
    ansible.builtin.service:
      name: docker
      enabled: true
      daemon_reload: true
      state: restarted

  # Kubelet will not start if the system has swap enabled, so we are disabling swap using the below code
  - name: Remove swapfile from /etc/fstab
    ansible.posix.mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    ansible.builtin.command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Set bridge-nf-call settings
    ansible.builtin.command: "{{ item }}"
    with_items:
      - modprobe overlay
      - modprobe bridge
      - modprobe br_netfilter
    register: my_output # <- Registers the command output.
    changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

  - name: Configure sysctl
    ansible.builtin.lineinfile:
      path: /etc/sysctl.d/kubernetes.conf
      line: "{{ item }}"
      create: true
      mode: 0666
    with_items:
      - 'net.bridge.bridge-nf-call-iptables = 1'
      - 'net.bridge.bridge-nf-call-ip6tables = 1'
      - 'net.ipv4.ip_forward = 1'


  - name: Restart sysctl
    ansible.builtin.command: sudo sysctl --system
    register: my_output # <- Registers the command output.
    changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

  # Installing kubelet, kubeadm and kubectl using the below code
  - name: Add an apt signing key for Kubernetes
    ansible.builtin.apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    ansible.builtin.apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl
        - kubernetes-cni

  - name: Setting hostname
    ansible.builtin.command: hostnamectl set-hostname k8s-worker
    register: my_output # <- Registers the command output.
    changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

  # -  name: Configure node ip
  #   lineinfile:
  #      path: /etc/default/kubelet
  #      line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}
  #      create: yes

  - name: Restart kubelet
    ansible.builtin.service:
      name: kubelet
      daemon_reload: true
      enabled: true
      state: restarted

  - name: Copy the join command to server location
    ansible.builtin.copy:
      src: join-command
      dest: /tmp/join-command.sh mode=0777
      mode: 0666

  - name: Delete config.toml # because this was hapened "code = Unimplemented desc = unknown service runtime.v1alpha2.ImageService"
  # https://github.com/containerd/containerd/issues/4581
    ansible.builtin.file:
      path: /etc/containerd/config.toml
      state: absent

  - name: Restart the containerd service
    ansible.builtin.service:
      name: containerd
      daemon_reload: true
      enabled: true
      state: restarted

  - name: Join the node to cluster
    ansible.builtin.command: sh /tmp/join-command.sh
    register: my_output # <- Registers the command output.
    changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

  # Setup a handler for checking Docker daemon using the below code.
  handlers:
    - name: Docker status
      ansible.builtin.service:
        name: docker
        state: started
